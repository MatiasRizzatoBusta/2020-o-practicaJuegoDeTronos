import personaje.*
import familias.*
import animales.*
import conspiraciones.*

const jon = new Personaje(nombre = "jon",familia = guardiaDeLaNoche,personalidad = asesino)
const sansa = new Personaje(nombre = "sansa",familia = stark,personalidad = asesinoPrecavido)
const jofferey = new Personaje(nombre = "jofferey",familia = lannister,personalidad = disipado)
const cercei = new Personaje(nombre ="cercei",familia = lannister, personalidad = asesino)
const rob = new Personaje(nombre = "rob",familia = stark,personalidad = miedoso)
const ghost = new Lobo(raza = hungaro)
const conspiracion = new Conspiracion(objetivo = cercei,complotados = [jon,sansa,rob,jofferey])

test "un personaje se puede casar con otro" {
	sansa.casarse(jofferey)
	assert.equals([sansa],jofferey.conyugues())

}
	
test "una persona no se puede casar con otra "{
	stark.agregarMiembro(rob)
	stark.agregarMiembro(sansa)
	assert.throwsExceptionWithMessage("No permite el casamiento",{rob.casarse(sansa)})
	
}

test "los lannister son ricos"{
	lannister.agregarPatrimonio(10000)
	assert.that(lannister.esRica())
}

test "patrimonio de cercei"{
	lannister.agregarMiembro(cercei)
	lannister.agregarMiembro(jofferey)
	lannister.agregarPatrimonio(10000)
	assert.equals(5000,cercei.patrimonio())
}


test "un personaje es peligroso por tener un acompaniante peligroso"{
	jon.agregarAcompaniante(ghost)
	assert.that(jon.esPeligroso())
	assert.equals([ghost],jon.aliados())
}

test "un personaje es peligroso por tener 10000 monedas de oro"{
	lannister.agregarMiembro(cercei)
	lannister.agregarMiembro(jofferey)
	lannister.agregarPatrimonio(10000)
	assert.that(cercei.esPeligroso())
	
}
/* 
test "se crea una conspiracion contra cercei"{
	lannister.agregarMiembro(cercei)
	lannister.agregarMiembro(jofferey)
	lannister.agregarPatrimonio(10000)
	assert.that(armarConspiracion.armar(cercei,[rob,sansa,jon,jofferey]))
	
}
*/

test "calculo cuantos traidores hay en una conspiracion"{
	lannister.agregarMiembro(cercei)
	lannister.agregarMiembro(jofferey)
	lannister.agregarPatrimonio(10000)
	assert.equals(1,conspiracion.cantidadDeTraidores())
	
}

